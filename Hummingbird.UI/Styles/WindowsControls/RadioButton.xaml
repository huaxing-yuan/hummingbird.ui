<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Fonts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- RadioButton START -->
    <Style x:Key="RadioButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" StrokeThickness="1" Stroke="#60000000" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"    Value="{StaticResource RadioButtonFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16"  VerticalAlignment="Center" >
                                <Ellipse x:Name="Border"  Fill="{DynamicResource ControlBackgroundSemiTransparentBrush}" StrokeThickness="1" Stroke="{DynamicResource ForegroundBrush}" />
                                <Ellipse x:Name="CheckMark" Margin="4" Fill="{DynamicResource ForegroundBrush}" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource ControlBackgroundBrush}" />
                            <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource HighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource ControlBackgroundSemiTransparentBrush}" />
                            <Setter TargetName="Border" Property="Stroke" Value="{DynamicResource ControlBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="Stroke" Value="#40000000" />
                            <Setter Property="Foreground" Value="#80000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- RadioButton END-->

    <Style x:Key="ButtonStyleRadioButton" TargetType="RadioButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource TextFontFamily}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Padding" Value="6,3,6,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border  x:Name="Border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Label SnapsToDevicePixels ="True" Margin="-6,-3"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="Border2" Background="{DynamicResource HighlightBrush}" Opacity="0"/>
                            <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="AniMouseEnter">
                            <DoubleAnimation To=".75" Duration="0:0:0.4" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseLeave">
                            <DoubleAnimation To="0" Duration="0:0:0.4" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseDown">
                            <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseUp">
                            <DoubleAnimation To=".75" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseLeave}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseDown}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseUp}" />
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargeButtonStyleRadioButton" TargetType="RadioButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource TextFontFamily}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource SubHeaderFontSize}" />
        <Setter Property="Padding" Value="8,4,8,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border  x:Name="Border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Label SnapsToDevicePixels ="True" Margin="-8,-4"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="Border2" Background="{DynamicResource HighlightBrush}" Opacity="0"/>
                            <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="AniMouseEnter">
                            <DoubleAnimation To=".75" Duration="0:0:0.4" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseLeave">
                            <DoubleAnimation To="0" Duration="0:0:0.4" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseDown">
                            <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseUp">
                            <DoubleAnimation To=".75" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseLeave}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseDown}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseUp}" />
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TabStyleRadioButton" TargetType="RadioButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource ControlTitleFontSize}" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="Padding" Value="8,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border  x:Name="Border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Label SnapsToDevicePixels ="True" Margin="-8,-3"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="Border2" Background="{DynamicResource HighlightBrush}" Opacity="0"/>
                            <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontSize" Value="{DynamicResource ControlTitleFontSize}" />
                        </Style>
                        <Storyboard x:Key="AniMouseEnter">
                            <DoubleAnimation To=".75" Duration="0:0:0.4" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseLeave">
                            <DoubleAnimation To="0" Duration="0:0:0.4" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseDown">
                            <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseUp">
                            <DoubleAnimation To=".75" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseLeave}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseDown}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseUp}" />
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="LightTabStyleRadioButton" TargetType="RadioButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource TextFontSize}" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="Padding" Value="8,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border  x:Name="Border"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Label SnapsToDevicePixels ="True" Margin="-8,-3"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="Border2" Background="{DynamicResource HighlightBrush}" Opacity="0"/>
                            <ContentPresenter x:Name="Content" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Resources>

                        <Storyboard x:Key="AniMouseEnter">
                            <DoubleAnimation To=".75" Duration="0:0:0.4" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseLeave">
                            <DoubleAnimation To="0" Duration="0:0:0.4" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseDown">
                            <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                        <Storyboard x:Key="AniMouseUp">
                            <DoubleAnimation To=".75" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Opacity)" Storyboard.TargetName="Border2" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseEnter}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseLeave}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseDown}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.PreviewMouseUp">
                            <BeginStoryboard Storyboard="{StaticResource AniMouseUp}" />
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="LightTabStyleRadioButton2" TargetType="RadioButton" BasedOn="{StaticResource LightTabStyleRadioButton}">
        <Setter Property="FontSize" Value="{DynamicResource TextFontSize}" />
        <Setter Property="FontFamily" Value="{StaticResource TextFontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>


</ResourceDictionary>