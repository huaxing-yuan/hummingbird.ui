<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Hummingbird.UI"
                    xmlns:converters="clr-namespace:Hummingbird.UI.Converters"
>

    <converters:StringToResourceConverter x:Key="StringToResourceConverter" />


    <Style TargetType="{x:Type local:AppBarButton}" x:Key="{x:Type local:AppBarButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="MinWidth" Value="{DynamicResource Value64}" />
        <Setter Property="Padding" Value="{DynamicResource Thickness4444}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AppBarButton}">
                    <Border x:Name="Container" Padding="{TemplateBinding Padding}">
                        <StackPanel Background="Transparent" x:Name="Panel" >
                            <StackPanel.RenderTransform>
                                <TranslateTransform Y="8" />
                            </StackPanel.RenderTransform>
                            <Viewbox Width="{DynamicResource Value32}"  Height="{DynamicResource Value32}" HorizontalAlignment="Center">
                            <Grid >
                                    <Path x:Name="Circle" Width="74.4167" Height="74.4167" Canvas.Left="0.791662" Canvas.Top="0.791664" Stretch="Fill" Data="F1 M 38,0.791664C 58.5496,0.791664 75.2083,17.4504 75.2083,38C 75.2083,58.5496 58.5496,75.2083 38,75.2083C 17.4504,75.2083 0.791662,58.5496 0.791662,38C 0.791662,17.4504 17.4504,0.791664 38,0.791664 Z M 38,5.54166C 20.0738,5.54166 5.54167,20.0738 5.54167,38C 5.54167,55.9262 20.0738,70.4583 38,70.4583C 55.9262,70.4583 70.4583,55.9262 70.4583,38C 70.4583,20.0738 55.9262,5.54166 38,5.54166 Z "/>
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding IconKey, Converter={StaticResource StringToResourceConverter}}" />
                            </Grid>
                            </Viewbox>
                            <TextBlock x:Name="Caption" Visibility="Hidden" Text="{TemplateBinding Caption}" FontSize="{DynamicResource SmallFontSize}" TextAlignment="Center" TextWrapping="Wrap" TextTrimming="WordEllipsis" LineStackingStrategy="BlockLineHeight" MaxHeight="24" Margin="{DynamicResource Thickness1111}"/>
                    </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Caption" Property="Text" Value="{x:Null}">
                            <Setter TargetName="Caption" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Container" Property="Background" Value="{DynamicResource HighlightBrush}" />
                            <Setter Property="Opacity" Value="1" />
                            <Setter TargetName="Caption" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="HoldEnd">
                                        <DoubleAnimation To="0" DecelerationRatio="1" Duration="0:0:0.3" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" Storyboard.TargetName="Panel" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="HoldEnd">
                                        <DoubleAnimation To="8" DecelerationRatio="1" Duration="0:0:0.3" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" Storyboard.TargetName="Panel" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Container"  Property="Background" Value="{DynamicResource HighlightBrush}" />
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsToggleButton" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Container" Property="Background" Value="{DynamicResource HighlightBrush}"  />
                        </MultiTrigger>
                        <Trigger Property="IsCircleVisible" Value="False">
                            <Setter TargetName="Circle" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Path}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type Polygon}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type Ellipse}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type local:AppBarButton}" x:Key="IconOnlyAppbarButton">
        <Setter Property="Width" Value="{DynamicResource Value32}" />
        <Setter Property="Height" Value="{DynamicResource Value32}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="{DynamicResource Thickness4444}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AppBarButton}">
                    <Viewbox Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}" HorizontalAlignment="Center">
                        <Grid Background="Transparent">
                            <Path x:Name="Circle" Width="74.4167" Height="74.4167" Canvas.Left="0.791662" Canvas.Top="0.791664" Stretch="Fill" Data="F1 M 38,0.791664C 58.5496,0.791664 75.2083,17.4504 75.2083,38C 75.2083,58.5496 58.5496,75.2083 38,75.2083C 17.4504,75.2083 0.791662,58.5496 0.791662,38C 0.791662,17.4504 17.4504,0.791664 38,0.791664 Z M 38,5.54166C 20.0738,5.54166 5.54167,20.0738 5.54167,38C 5.54167,55.9262 20.0738,70.4583 38,70.4583C 55.9262,70.4583 70.4583,55.9262 70.4583,38C 70.4583,20.0738 55.9262,5.54166 38,5.54166 Z "/>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"  Content="{TemplateBinding IconKey, Converter={StaticResource StringToResourceConverter}}" />
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsCircleVisible" Value="False">
                            <Setter TargetName="Circle" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Path}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type Polygon}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type Ellipse}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HighlightMiddleBrush}" />
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HighlightBrush}" />
                <Setter Property="Opacity" Value="0.7" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:AppBarButton}" x:Key="LightAppbarButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Width" Value="{DynamicResource Value48}" />
        <Setter Property="Padding" Value="{DynamicResource Thickness4444}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AppBarButton}">

                    <Border x:Name="Container" Padding="{TemplateBinding Padding}">
                        <StackPanel Background="Transparent" x:Name="Panel" >
                            <StackPanel.RenderTransform>
                                <TranslateTransform Y="8" />
                            </StackPanel.RenderTransform>
                            <Viewbox Width="{DynamicResource Value32}"  Height="{DynamicResource Value32}" HorizontalAlignment="Center">
                                <Grid Background="Transparent">
                                    <Path x:Name="Circle" Width="74.4167" Height="74.4167" Canvas.Left="0.791662" Canvas.Top="0.791664" Stretch="Fill" Data="F1 M 38,0.791664C 58.5496,0.791664 75.2083,17.4504 75.2083,38C 75.2083,58.5496 58.5496,75.2083 38,75.2083C 17.4504,75.2083 0.791662,58.5496 0.791662,38C 0.791662,17.4504 17.4504,0.791664 38,0.791664 Z M 38,5.54166C 20.0738,5.54166 5.54167,20.0738 5.54167,38C 5.54167,55.9262 20.0738,70.4583 38,70.4583C 55.9262,70.4583 70.4583,55.9262 70.4583,38C 70.4583,20.0738 55.9262,5.54166 38,5.54166 Z "/>
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"  Content="{TemplateBinding IconKey, Converter={StaticResource StringToResourceConverter}}" />
                                </Grid>
                            </Viewbox>
                            <TextBlock x:Name="Caption" Visibility="Hidden" Text="{TemplateBinding Caption}" FontSize="{DynamicResource SmallFontSize}" TextAlignment="Center" TextWrapping="Wrap" TextTrimming="WordEllipsis" LineStackingStrategy="BlockLineHeight" MaxHeight="24" Margin="{DynamicResource Thickness1111}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Caption" Property="Text" Value="{x:Null}">
                            <Setter TargetName="Caption" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightBrush}" />
                            <Setter TargetName="Caption" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="HoldEnd">
                                        <DoubleAnimation To="0" DecelerationRatio="1" Duration="0:0:0.3" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" Storyboard.TargetName="Panel" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="HoldEnd">
                                        <DoubleAnimation To="8" DecelerationRatio="1" Duration="0:0:0.3" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.Y)" Storyboard.TargetName="Panel" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource HighlightMiddleBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsToggleButton" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Container" Property="Background" Value="{DynamicResource HighlightLightBrush}"  />
                        </MultiTrigger>
                        <Trigger Property="IsCircleVisible" Value="False">
                            <Setter TargetName="Circle" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Path}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type Rectangle}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type Polygon}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type Ellipse}">
                <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AppBarButton}}}" />
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ModernLink}}}" />
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>