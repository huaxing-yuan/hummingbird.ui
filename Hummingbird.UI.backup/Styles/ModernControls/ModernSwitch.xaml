<ResourceDictionary x:Class="Hummingbird.UI.ModernControls.ModernSwitchHandler"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:ClassModifier="internal"
                    xmlns:local="clr-namespace:Hummingbird.UI">

    <Style TargetType="{x:Type local:ModernSwitch}" x:Key="{x:Type local:ModernSwitch}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Margin" Value="4,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ModernSwitch}">
                    <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Margin}">
                        <Border BorderThickness="2" BorderBrush="{DynamicResource ControlBorderBrush}" Height="20" Width="40" x:Name="borderAll" MouseLeftButtonDown="ModernSwitch_MouseLeftButtonDown" VerticalAlignment="Center" >
                            <Grid>
                                <Border Background="{DynamicResource ControlBorderBrush}" Margin="1" x:Name="borderBackground" />
                                <Border Width="14" HorizontalAlignment="Left" Margin="-2" x:Name="borderToggle" Background="{DynamicResource ForegroundBrush}" />
                            </Grid>
                        </Border>

                        <TextBlock Grid.Column="1" x:Name="Text" Text="{TemplateBinding UnCheckedText}" Style="{DynamicResource TextBlockText}" Margin="10,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Text" Property="Text" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CheckedText}" />
                            <Setter TargetName="borderToggle" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="borderBackground" Property="Background" Value="{DynamicResource ControlActiveBorderBrush}" />
                        </Trigger>
                        <Trigger SourceName="borderAll" Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderAll" Property="BorderBrush" Value="{DynamicResource ControlActiveBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="borderBackground" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="borderAll" Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>