<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Hummingbird.UI"
                    xmlns:converters="clr-namespace:Hummingbird.UI.Converters" x:ClassModifier="internal"

	x:Class="Hummingbird.UI.ModernControls.ModernWindowHandler"
>

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ModernMenuItem.xaml" />
        <ResourceDictionary Source="AppbarButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="myLeftHeader">
        <TextBlock Text="{Binding}" FontSize="{DynamicResource SubHeaderFontSize}" Foreground="#FFFFFF" Margin="{DynamicResource ThicknessBackstageHeaderPadding}" />
    </DataTemplate>

    <DataTemplate x:Key="myLeftHeaderDisabled">
        <TextBlock Text="{Binding}" FontSize="{DynamicResource SubHeaderFontSize}" Foreground="{DynamicResource DisabledForegroundBrush}" Margin="{DynamicResource ThicknessBackstageHeaderPaddings}" />
    </DataTemplate>

    <Style TargetType="{x:Type TabItem}" x:Key="BackstageTabItemStyle">
        <Setter Property="HeaderTemplate" Value="{StaticResource myLeftHeader}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border" Background="{DynamicResource HighlightDarkBrush}" >
                        <Grid>
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Left" ContentSource="Header" RecognizesAccessKey="True"/>
                            <Polygon Points="8,0 0,10 8,20" Fill="{DynamicResource BackgroundBrush}" x:Name="Triangle" Visibility="Hidden" HorizontalAlignment="Right" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource HighlightBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="50" />
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource HighlightMiddleBrush}" />
                            <Setter Property="Visibility" TargetName="Triangle" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource ControlBackgroundBrush}"  />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}" x:Key="BackstageTabControlStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource BackstageTabItemStyle}" />
        <Setter Property="TabStripPlacement" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="200"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border Background="{DynamicResource HighlightDarkBrush}" Padding ="{DynamicResource ContentSpacing}" >
                            <local:AppBarButton x:Name="HideBackstagePanel" Style="{DynamicResource IconOnlyAppbarButton}" Foreground="White" Click="BackstageButton_Click" IconKey="appbar_navigate_previous" Grid.Row="0" HorizontalAlignment="Left" Width="32" />
                        </Border>

                        <Border MouseDown="Title_MouseDown" Background="{DynamicResource BackgroundBrush}"  Grid.Row="0" Grid.Column="1">
                            <TextBlock Margin="{DynamicResource ContentSpacing}" FontFamily="{DynamicResource HeaderFontFamily}" FontSize="{DynamicResource Value24}" Text="{Binding Path=SelectedItem.Header, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}}" />
                        </Border>

                        <TabPanel x:Name="HeaderPanel" Grid.Column="0" Grid.Row="1" Panel.ZIndex="1" IsItemsHost="True" Background="{DynamicResource HighlightDarkBrush}" KeyboardNavigation.TabIndex="1" />

                        <Border x:Name="Border" Grid.Column="1" Grid.Row="1" Background="{DynamicResource BackgroundBrush}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" >
                            <ContentPresenter x:Name="PART_SelectedContentHost" Margin="{DynamicResource ThicknessButtonPadding}" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Resources>
                        <Style TargetType="TabItem" BasedOn="{StaticResource BackstageTabItemStyle}" />
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}"  />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:ModernWindow}" x:Key="DefaultModernWindow">
        <Setter Property="WindowStyle" Value="SingleBorderWindow" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="BorderThickness" Value="{DynamicResource Thickness1111}" />
        <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource TextFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ModernWindow}">
                    <ControlTemplate.Resources>
                        <converters:IntToVisibilityConverterReversed x:Key="IntToVisibilityConverter"/>
                        <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Border x:Name="WindowBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" >
                        <Border.Resources>
                            <Storyboard FillBehavior="Stop" x:Key="HideContentStoryboard" x:Name="HideContentStoryboard">
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2" DecelerationRatio="1" />
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="0" To="-100" Duration="0:0:0.3" DecelerationRatio="1" />
                            </Storyboard>
                        </Border.Resources>
                        <Grid Background="Transparent" >
                            <Grid x:Name="ContentBorder">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>


                                <!--This border is used as background of the menu bar (Title, Level 1 menu and Level2 menu -->
                                <Border Grid.Row="0" Grid.ColumnSpan="7" Grid.RowSpan="3" Style="{DynamicResource MenuBackgroundStyle}" />
                                

                                <!-- Backstage -->
                                <Border Grid.Row="0" Grid.RowSpan="5" Grid.ColumnSpan="7" Visibility="Collapsed" Panel.ZIndex="40" x:Name="BackstageContainer" >
                                    <Border.RenderTransform>
                                        <TranslateTransform />
                                    </Border.RenderTransform>
                                    <ContentPresenter ContentSource="BackstagePanel" x:Name="BackstagePanel" Grid.Row="1" />
                                </Border>

                                <!-- ICON (0,0) + Control Buttons -->
                                <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" >
                                    <Image Source="{TemplateBinding Icon}" Margin="{DynamicResource Thickness4444}" VerticalAlignment="Center" Width="{DynamicResource Value20}" SnapsToDevicePixels="False" RenderOptions.BitmapScalingMode="HighQuality"/>
                                    <Border Height="16" Width="1" Margin="4,0" Background ="{DynamicResource ControlBackgroundBrush}" />
                                    <!--
                                    <Rectangle Width="16" Height="16">
                                        <Rectangle.Fill>
                                            <DrawingBrush>
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup>
                                                        <DrawingGroup.Children>
                                                            <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                                            <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M4.5859,5L-0.000100000000000655,9.586 -0.000100000000000655,10.414 4.5859,15 10.4139,15 7.4139,12 9.9999,12C13.3089,12 15.9999,9.309 15.9999,6 15.9999,2.691 13.3089,0 9.9999,0L8.9999,0 8.9999,4 9.9999,4C11.1029,4 11.9999,4.896 11.9999,6 11.9999,7.103 11.1029,8 9.9999,8L7.4139,8 10.4139,5z" />
                                                            <GeometryDrawing Brush="#FF414141" Geometry="F1M5,14L8,14 5,11 10,11C12.762,11 15,8.761 15,6 15,3.238 12.762,1 10,1L10,3C11.657,3 13,4.344 13,6 13,7.657 11.657,9 10,9L5,9 8,6 5,6 1,10z" />
                                                        </DrawingGroup.Children>
                                                    </DrawingGroup>
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    -->
                                </StackPanel>

                                <!-- Application Title (0,2)-->
                                <Border Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2"  MouseDown="Title_MouseDown" Background="Transparent" Panel.ZIndex="200">
                                    <TextBlock x:Name="WindowTitle" Foreground="{DynamicResource MenuForegroundBrush}" Text="{TemplateBinding Title}" FontWeight="Bold" FontSize="{DynamicResource TextFontSize}"  Margin="{DynamicResource Thickness4444}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </Border>

                                <StackPanel Grid.Row="0" Grid.Column="5" Grid.RowSpan="2" Margin="0,0,10,0" Panel.ZIndex="200" Visibility="{TemplateBinding IsAvatarVisible, Converter={StaticResource bool2VisibilityConverter}}" Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" >
                                    <TextBlock Text="{TemplateBinding AvatarText}" FontSize="{DynamicResource Value10}" VerticalAlignment="Center" Margin="0,0,10,0" FontWeight="Bold" Foreground="{DynamicResource MenuForegroundBrush}" />
                                    <Rectangle Stroke="{DynamicResource HighlightBrush}" StrokeThickness="1" Fill="{TemplateBinding AvatarBrush}" Stretch="UniformToFill"  Width="{TemplateBinding AvatarSize}" Height="{TemplateBinding AvatarSize}"  MouseLeftButtonDown="Avatar_MouseClick" />
                                </StackPanel>
                                <!-- ControlBox (0,6) -->
                                <StackPanel HorizontalAlignment="Right" Grid.Row="0" Grid.Column="6" x:Name="ControlBox" Orientation="Horizontal" Panel.ZIndex="200">
                                    <Button x:Name="DetachButton" Style="{DynamicResource ControlBoxButton}" Click="DetachButton_Click" Visibility="Collapsed" ToolTip="Pop-out this content">
                                        <Rectangle Width="16" Height="16">
                                            <Rectangle.Fill>
                                                <DrawingBrush>
                                                    <DrawingBrush.Drawing>
                                                        <DrawingGroup>
                                                            <DrawingGroup.Children>
                                                                <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                                                <GeometryDrawing Brush="#FFF6F6F6" Geometry="F1M0.9999,-0.000199999999999534L0.9999,3.0008 4.7139,3.0008 1.0119,6.9998 6.4409,6.9998 0.6179,12.8438 3.1499,15.4288 9.1499,9.3008 9.1499,15.2508 12.9999,11.0888 12.9999,15.9998 15.9999,15.9998 15.9999,-0.000199999999999534z" />
                                                                <GeometryDrawing Brush="#FF424242" Geometry="F1M14,1L2,1 2,2 14,2 14,15 15,15 15,1z M5.151,4L12,4 12,10.697 10.15,12.697 10.15,6.85 3.15,14 2.023,12.85 8.85,6 3.3,6z" />
                                                            </DrawingGroup.Children>
                                                        </DrawingGroup>
                                                    </DrawingBrush.Drawing>
                                                </DrawingBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                    </Button>
                                    <Button x:Name="MinimizeButton" FontFamily="Marlett" Style="{DynamicResource ModernWindowControlBoxButton}" Click="MinimizeButton_Click">0</Button>
                                    <Button x:Name="MaximumButton" FontFamily="Marlett" Style="{DynamicResource ModernWindowControlBoxButton}" Click="MaximumButton_Click">1</Button>
                                    <Button x:Name="CloseButton" FontFamily="Marlett" Style="{DynamicResource ModernWindowCloseButton}" Click="CloseButton_Click">r</Button>
                                </StackPanel>


                                <!-- Banner  (1,0)-->
                                <Button x:Name="BackstageButton" Margin="0"  Grid.Row="1" Grid.Column="0" Click="BackstageButton_Click" VerticalAlignment="Bottom" Style="{DynamicResource ModernMenuButtonStyle}" >
                                    <local:AppBarIcon IconKey="appbar_settings" Height="16" Margin="4,2" />
                                </Button>
                                <Border x:Name="Banner" Visibility="Collapsed" Width="8" Background="{DynamicResource HighlightGradientBrush}"  Grid.Row="1" Grid.Column="0" Grid.RowSpan="2" HorizontalAlignment="Left" Margin="0,4" />

                                <!-- Level1 Menu (1,1-6) -->
                                <ItemsControl ItemsSource="{TemplateBinding MainMenu}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="6">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" >
                                                <StackPanel.Resources>
                                                    <Style TargetType="{x:Type local:ModernMenuItem}" BasedOn="{StaticResource Level1MenuItemStyle}" />
                                                </StackPanel.Resources>
                                            </StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>

                                <!-- Level2 Menu (2,1-6) -->
                                <ItemsControl ItemsSource="{TemplateBinding MainMenuLevel2}" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="6">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" MinHeight="20" >
                                                <StackPanel.Resources>
                                                    <Style TargetType="{x:Type local:ModernMenuItem}" BasedOn="{StaticResource Level2MenuItemStyle}" />
                                                </StackPanel.Resources>
                                            </StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>

                                <!-- CommandArea (2,7)-->
                                <ContentPresenter ContentSource="CommandArea" x:Name="CommandArea" Margin="4,0,10,10" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="7" HorizontalAlignment="Right" />

                                <!-- Level3 Menu + Content -->
                                <Grid Grid.Row="3" Grid.ColumnSpan="7" x:Name="Level3Content">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>


                                    <!-- Content -->
                                    <ContentPresenter Grid.Column="1"  />
                                    
                                    
                                    <!-- Level 3 menu-->
                                        <Border Style="{DynamicResource LeftInBorder}" Visibility="{Binding Items.Count, Converter={StaticResource IntToVisibilityConverter}, Mode=OneWay}" DataContext="{Binding ElementName=ItemsControl}" Padding="0,30,20,0" Background="{DynamicResource MenuBackgroundBrush}" >
                                            <ItemsControl ItemsSource="{TemplateBinding MainMenuLevel3}" x:Name="ItemsControl"  >
                                                <ItemsControl.RenderTransform>
                                                    <TranslateTransform />
                                                </ItemsControl.RenderTransform>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Vertical" x:Name="MainMenuLevel3StackPanel"  >
                                                            <StackPanel.Resources>
                                                                <Style TargetType="{x:Type local:ModernMenuItem}" BasedOn="{StaticResource Level3MenuItemStyle}" />
                                                            </StackPanel.Resources>
                                                        </StackPanel>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </Border>




                                </Grid>

                                <!-- Status bar -->
                                <ContentPresenter ContentSource="StatusBar" x:Name="StatusBar" Grid.Row="4" Grid.ColumnSpan="7" />

                            </Grid>
                            <Border x:Name="Mask" Background="{DynamicResource BackgroundBrush}" Opacity="0.8" Visibility="Collapsed"  Grid.Row="0" Grid.RowSpan="5" Grid.ColumnSpan="7" Panel.ZIndex="80" />
                            <Border Padding="{DynamicResource HeaderMargin}" VerticalAlignment="Center" x:Name="MessageBox" Style="{DynamicResource FadeInBorder}" Grid.Row="1" Grid.RowSpan="4" Grid.ColumnSpan="7" Panel.ZIndex="90" Background="{DynamicResource HighlightBrush}" Visibility="Collapsed">
                                <StackPanel Margin="{DynamicResource HeaderMargin}">
                                    <TextBlock Style="{DynamicResource TextBlockViewHeader}" Foreground="{DynamicResource HighlightForegroundBrush}" Text="{TemplateBinding MessageBoxTitle}" />
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" MaxHeight="250" MinHeight="50">
                                        <TextBlock Foreground="{DynamicResource HighlightForegroundBrush}" Margin="{DynamicResource HeaderMargin}" TextWrapping="Wrap" x:Name="MessageBoxContent" Text="{TemplateBinding MessageBoxContent}" />
                                    </ScrollViewer>
                                    <Button Content="OK" Style="{DynamicResource DialogButton}" x:Name="btnCloseMessageBox" Click="btnCloseMessageBox_Click" HorizontalAlignment="Right" />
                                </StackPanel>
                            </Border>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="WindowState" Value="Maximized" >
                            <!-- {Binding Source={x:Static shell:SystemParameters2.Current}, Path=WindowResizeBorderThickness} -->
                            <Setter TargetName="WindowBorder" Property="Padding" Value="7,7" />
                            <Setter TargetName="MaximumButton" Property="Content" Value="2" />
                        </Trigger>
                        <Trigger Property="HasControlBox" Value="False">
                            <Setter TargetName="ControlBox" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="WindowStatus" Value="Busy">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource ControlBusyBorderBrush}" />
                        </Trigger>
                        <Trigger Property="WindowStatus" Value="Good">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource ControlGoodBorderBrush}" />
                        </Trigger>
                        <Trigger Property="WindowStatus" Value="Bad">
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource ControlBadBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="WindowTitle" Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"  />
                            <Setter TargetName="WindowBorder" Property="BorderBrush" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="BackstagePanel" Value="{x:Null}">
                            <Setter TargetName="BackstageButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Banner" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger SourceName="BackstageContainer" Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="HoldEnd"  >
                                        <DoubleAnimation Storyboard.TargetName="BackstageContainer" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2" DecelerationRatio="1" />
                                        <DoubleAnimation Storyboard.TargetName="BackstageContainer" Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="-20" To="0" Duration="0:0:0.4" DecelerationRatio="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Setter TargetName="WindowTitle" Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                            <Setter TargetName="MinimizeButton" Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                            <Setter TargetName="MaximumButton" Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsMaskVisible" Value="True">
                            <Setter TargetName="Mask" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentBorder" Property="Effect">
                                <Setter.Value>
                                    <BlurEffect />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="HoldEnd"  >
                                        <DoubleAnimation Storyboard.TargetName="Mask" Storyboard.TargetProperty="Opacity" From="0" To="0.8" Duration="0:0:0.5" />
                                        <DoubleAnimation Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Effect.(BlurEffect.Radius)" From="0" To="10" Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMessageBoxVisible" Value="True">
                            <Setter TargetName="MessageBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsContentDetachable" Value="True" />
                                <Condition Property="IsContentDetached" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="DetachButton" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>